$date
	Sat Nov 23 23:53:15 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module ula_tb $end
$var wire 9 ! saida9Bits [8:0] $end
$var reg 1 " clock $end
$var reg 8 # entradaA8Bits [7:0] $end
$var reg 8 $ entradaB8Bits [7:0] $end
$var reg 4 % opCode [3:0] $end
$scope module uut $end
$var wire 1 " clock $end
$var wire 8 & entradaA8Bits [7:0] $end
$var wire 8 ' entradaB8Bits [7:0] $end
$var wire 4 ( opCode [3:0] $end
$var wire 9 ) resultado_subtracao [8:0] $end
$var wire 9 * resultado_soma [8:0] $end
$var wire 9 + resultado_comparacao [8:0] $end
$var reg 9 , saida9Bits [8:0] $end
$scope module comparador8bits_inst $end
$var wire 4 - codigoComparacao [3:0] $end
$var wire 8 . entradaA [7:0] $end
$var wire 8 / entradaB [7:0] $end
$var reg 9 0 saida9Bits [8:0] $end
$var integer 32 1 i [31:0] $end
$upscope $end
$scope module somador_inst $end
$var wire 8 2 A [7:0] $end
$var wire 8 3 B [7:0] $end
$var wire 9 4 S [8:0] $end
$var wire 7 5 C [6:0] $end
$scope module unidade1 $end
$var wire 1 6 A $end
$var wire 1 7 B $end
$var wire 1 8 C $end
$var wire 1 9 S $end
$upscope $end
$scope module unidade2 $end
$var wire 1 : A $end
$var wire 1 ; B $end
$var wire 1 < CIN $end
$var wire 1 = COUT $end
$var wire 1 > S $end
$upscope $end
$scope module unidade3 $end
$var wire 1 ? A $end
$var wire 1 @ B $end
$var wire 1 A CIN $end
$var wire 1 B COUT $end
$var wire 1 C S $end
$upscope $end
$scope module unidade4 $end
$var wire 1 D A $end
$var wire 1 E B $end
$var wire 1 F CIN $end
$var wire 1 G COUT $end
$var wire 1 H S $end
$upscope $end
$scope module unidade5 $end
$var wire 1 I A $end
$var wire 1 J B $end
$var wire 1 K CIN $end
$var wire 1 L COUT $end
$var wire 1 M S $end
$upscope $end
$scope module unidade6 $end
$var wire 1 N A $end
$var wire 1 O B $end
$var wire 1 P CIN $end
$var wire 1 Q COUT $end
$var wire 1 R S $end
$upscope $end
$scope module unidade7 $end
$var wire 1 S A $end
$var wire 1 T B $end
$var wire 1 U CIN $end
$var wire 1 V COUT $end
$var wire 1 W S $end
$upscope $end
$scope module unidade8 $end
$var wire 1 X A $end
$var wire 1 Y B $end
$var wire 1 Z CIN $end
$var wire 1 [ COUT $end
$var wire 1 \ S $end
$upscope $end
$upscope $end
$scope module subtrator_inst $end
$var wire 8 ] A [7:0] $end
$var wire 8 ^ B [7:0] $end
$var wire 9 _ S [8:0] $end
$var wire 7 ` C [6:0] $end
$scope module unidade1 $end
$var wire 1 a A $end
$var wire 1 b B $end
$var wire 1 c C $end
$var wire 1 d S $end
$upscope $end
$scope module unidade2 $end
$var wire 1 e A $end
$var wire 1 f B $end
$var wire 1 g CIN $end
$var wire 1 h COUT $end
$var wire 1 i S $end
$upscope $end
$scope module unidade3 $end
$var wire 1 j A $end
$var wire 1 k B $end
$var wire 1 l CIN $end
$var wire 1 m COUT $end
$var wire 1 n S $end
$upscope $end
$scope module unidade4 $end
$var wire 1 o A $end
$var wire 1 p B $end
$var wire 1 q CIN $end
$var wire 1 r COUT $end
$var wire 1 s S $end
$upscope $end
$scope module unidade5 $end
$var wire 1 t A $end
$var wire 1 u B $end
$var wire 1 v CIN $end
$var wire 1 w COUT $end
$var wire 1 x S $end
$upscope $end
$scope module unidade6 $end
$var wire 1 y A $end
$var wire 1 z B $end
$var wire 1 { CIN $end
$var wire 1 | COUT $end
$var wire 1 } S $end
$upscope $end
$scope module unidade7 $end
$var wire 1 ~ A $end
$var wire 1 !" B $end
$var wire 1 "" CIN $end
$var wire 1 #" COUT $end
$var wire 1 $" S $end
$upscope $end
$scope module unidade8 $end
$var wire 1 %" A $end
$var wire 1 &" B $end
$var wire 1 '" CIN $end
$var wire 1 (" COUT $end
$var wire 1 )" S $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
1!"
1~
0}
0|
0{
0z
0y
0x
0w
1v
0u
1t
1s
1r
1q
0p
0o
0n
1m
1l
1k
0j
1i
1h
0g
1f
0e
0d
0c
0b
0a
b1110 `
b1010 _
b1000110 ^
b1010000 ]
1\
0[
1Z
0Y
0X
0W
1V
0U
1T
1S
0R
0Q
0P
0O
0N
1M
0L
0K
0J
1I
0H
0G
0F
0E
0D
1C
0B
0A
1@
0?
1>
0=
0<
1;
0:
09
08
07
06
b1000000 5
b10010110 4
b1000110 3
b1010000 2
b1000 1
b0 0
b1000110 /
b1010000 .
b10 -
bx ,
b0 +
b10010110 *
b1010 )
b10 (
b1000110 '
b1010000 &
b10 %
b1000110 $
b1010000 #
0"
bx !
$end
#5
b1 !
b1 ,
1"
#10
1("
1)"
1'"
1#"
1$"
1""
1n
1|
0l
0q
1}
1W
0h
0m
1{
1U
0>
b11011100 *
b11011100 4
1H
0i
b111101100 )
b111101100 _
1s
b1111000 `
1w
b1100000 5
1Q
0;
0@
1E
1J
1O
0f
0k
1p
1u
1z
b1000 1
1?
0I
1N
1j
0t
1y
0"
b1111000 $
b1111000 '
b1111000 /
b1111000 3
b1111000 ^
b1100100 #
b1100100 &
b1100100 .
b1100100 2
b1100100 ]
#15
b0 !
b0 ,
1"
#20
0"
